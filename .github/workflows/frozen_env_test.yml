# CI/CD pipeline
name: Fixed environment

on:
  push:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Here we use a freeze file so we are 100% sure that if there is any failure
  # is because of dymoval itself and not because of some weird dependency
  # stuff
  pip_tests:
    name: Tests with pip
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]


    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5.2.0
        with:
            python-version: '3.12'

      - name: Install dependencies (pip)
        run: |
          python -m pip install -r pip_freeze_3_12_6.txt
          python -m pip install pytest
          python -m pip install .

      - name: Run tests (pytest)
        run: |
          pytest ./tests/

  conda_tests:
    name: Tests with conda
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.12"
          channels: conda-forge
          channel-priority: true
          environment-file: ./conda_freeze_3_12_6.yml
          miniforge-version: latest

      - name: Install dymoval through pip
        shell: bash -l {0}
        run: |
          # TODO replace pip install with conda install xx.tar.gz built
          # through conda build if possible
          conda install pytest
          python -m pip install .

      - name: Run tests (pytest)
        shell: bash -l {0}
        run: |
          pytest ./tests/
